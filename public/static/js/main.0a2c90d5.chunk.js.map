{"version":3,"sources":["logo.svg","components/LaunchItem.js","components/Pagination.js","components/MissionKey.js","components/Launches.js","components/RocketItem.js","components/Rockets.js","components/Launch.js","components/Rocket.js","components/Navigation.js","components/ShipItem.js","components/Ships.js","components/TodoItem.js","components/AddTodo.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","react_router_dom","to","concat","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","map","number","key","onClick","MissionKey","style","position","top","LAUNCHES_QUERY","gql","_templateObject","Launches","_useState","useState","_useState2","Object","slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","setItemsPerPage","indexOfLastItem","indexOfFirstItem","pageNumber","useEffect","console","log","react","type","value","placeholder","onChange","event","target","MissionKey_MissionKey","react_apollo_esm","query","loading","error","data","currentLauches","launches","slice","LaunchItem_LaunchItem","Pagination_Pagination","length","RocketItem","_ref$rocket","rocket","rocket_id","rocket_name","ROCTETS_QUERY","Rockets_templateObject","Rockets","rockets","RocketItem_RocketItem","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket_type","ROCKET_QUERY","Rocket_templateObject","Rocket","_data$rocket","wikipedia","href","Navigation","ShipItem","_ref$ship","ship","ship_id","ship_name","image","src","alt","SHIPS_QUERY","Ships_templateObject","Ships","ships","ShipItem_ShipItem","TodoItem","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","_this$props$todo","todo","id","title","completed","backgroundColor","textDecoration","fontSize","margin","htmlFor","checked","toggleComplete","bind","delTodo","Component","AddTodo","_getPrototypeOf2","_this","_len","args","Array","_key","call","state","e","setState","defineProperty","name","onSubmit","preventDefault","addTodo","Todos","todos","axios","delete","then","toConsumableArray","filter","finally","post","res","_this2","get","_this3","AddTodo_AddTodo","TodoItem_TodoItem","client","ApolloClient","uri","App","logo","width","Navigation_Navigation","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a2c90d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4fe0a39d.svg\";","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport const LaunchItem = ({\n    launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) => {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>\n                        Mission name:{' '}\n                        <span\n                            className={classNames({\n                                'text-success': launch_success,\n                                'text-danger': !launch_success,\n                            })}\n                        >\n                            {mission_name}\n                        </span>{' '}\n                    </h4>\n                    <p>\n                        Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n                    </p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n                        Launch Details\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LaunchItem;\n","import React from 'react';\n\nexport const Pagination = ({ itemsPerPage, totalItems, paginate }) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pageNumbers.map(number => (\n                    <li key={number} className=\"page-item\">\n                        <button onClick={() => paginate(number)} className=\"page-link\">\n                            {number}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Pagination;\n","import React from 'react';\n\nexport const MissionKey = () => {\n    return (\n        <div className=\"my-3\" style={{ position: 'sticky', top: 50 }}>\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Failed\n            </p>\n        </div>\n    );\n};\nexport default MissionKey;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { LaunchItem } from './LaunchItem';\nimport { Pagination } from './Pagination';\nimport { MissionKey } from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nexport const Launches = () => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage, setItemsPerPage] = useState(5);\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n\n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    useEffect(() => {\n        console.log('component reloaded');\n    });\n\n    return (\n        <Fragment>\n            <div className=\"card card-header mb-3\">\n                <h1>Launches</h1>\n            </div>\n            <input\n                type=\"text\"\n                value={itemsPerPage}\n                placeholder=\"Items per page\"\n                onChange={event => setItemsPerPage(event.target.value)}\n            />\n            <MissionKey />\n\n            <Query query={LAUNCHES_QUERY}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(error);\n\n                    // Get current lunches\n                    const currentLauches = data.launches.slice(indexOfFirstItem, indexOfLastItem);\n\n                    return (\n                        <Fragment>\n                            {currentLauches.map(launch => (\n                                <LaunchItem key={launch.flight_number} launch={launch} />\n                            ))}\n                            <Pagination\n                                itemsPerPage={itemsPerPage}\n                                totalItems={data.launches.length}\n                                paginate={paginate}\n                            />\n                        </Fragment>\n                    );\n                }}\n            </Query>\n        </Fragment>\n    );\n};\n\nexport default Launches;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const RocketItem = ({ rocket: { rocket_id, rocket_name } }) => {\n    return (\n        <div className=\"card card-body mb-3\" key={rocket_id}>\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>{rocket_name}</h4>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/rocket/${rocket_id}`} className=\"btn btn-secondary\">\n                        Rocket Details\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RocketItem;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { RocketItem } from './RocketItem';\n\nconst ROCTETS_QUERY = gql`\n    {\n        rockets {\n            rocket_id\n            rocket_name\n            rocket_type\n            wikipedia\n        }\n    }\n`;\n\nexport const Rockets = () => {\n    return (\n        <Fragment>\n            <div className=\"card card-header mb-3\">\n                <h1>Rockets</h1>\n            </div>\n            <Query query={ROCTETS_QUERY}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(error);\n\n                    return (\n                        <Fragment>\n                            {data.rockets.map(rocket => (\n                                <RocketItem key={rocket.rocket_id} rocket={rocket} />\n                            ))}\n                        </Fragment>\n                    );\n                }}\n            </Query>\n        </Fragment>\n    );\n};\n\nexport default Rockets;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\n\nexport const Launch = props => {\n    let { flight_number } = props.match.params;\n    flight_number = parseInt(flight_number, 10);\n    return (\n        <Fragment>\n            <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(error);\n\n                    const {\n                        mission_name,\n                        launch_year,\n                        launch_success,\n                        rocket: { rocket_id, rocket_name, rocket_type },\n                    } = data.launch;\n\n                    return (\n                        <div>\n                            <h1 className=\"display-4 my-3\">\n                                <span className=\"text-dark\">Misson name: </span>\n                                {mission_name}\n                            </h1>\n                            <h4 className=\"mb-3\">Launch Details</h4>\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                                <li className=\"list-group-item\">\n                                    Launch Successful:{' '}\n                                    <span\n                                        className={classNames({\n                                            'text-success': launch_success,\n                                            'text-danger': !launch_success,\n                                        })}\n                                    >\n                                        {launch_success ? 'Yes' : 'No'}\n                                    </span>\n                                </li>\n                            </ul>\n\n                            <h4 className=\"my-3\">Rocket Details</h4>\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Rocket Id: {rocket_id}</li>\n                                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                            </ul>\n                            <Link to=\"/launches\" className=\"btn btn-secondary mt-3\">\n                                Back\n                            </Link>\n                        </div>\n                    );\n                }}\n            </Query>\n        </Fragment>\n    );\n};\n\nexport default Launch;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nconst ROCKET_QUERY = gql`\n    query RocketQuery($rocket_id: String!) {\n        rocket(rocket_id: $rocket_id) {\n            rocket_id\n            rocket_name\n            rocket_type\n            wikipedia\n        }\n    }\n`;\n\nexport const Rocket = props => {\n    const { rocket_id } = props.match.params;\n\n    return (\n        <Fragment>\n            <Query query={ROCKET_QUERY} variables={{ rocket_id }}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(error);\n                    const { rocket_name, rocket_type, wikipedia } = data.rocket;\n\n                    return (\n                        <div>\n                            <h1 className=\"display-4 my-3\">\n                                <span className=\"text-dark\">Rocket name: </span>\n                                {rocket_name}\n                            </h1>\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                                <li className=\"list-group-item\">\n                                    <a href={wikipedia}>Wikipedia link</a>\n                                </li>\n                            </ul>\n                            <Link to=\"/rockets\" className=\"btn btn-secondary mt-3\">\n                                Back\n                            </Link>\n                        </div>\n                    );\n                }}\n            </Query>\n        </Fragment>\n    );\n};\n\nexport default Rocket;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Navigation = () => {\n    return (\n        <nav className=\"main-nav\">\n            <Link to=\"/launches\" className=\"btn btn-primary mr-3\">\n                Launches\n            </Link>\n            <Link to=\"/rockets\" className=\"btn btn-primary mr-3\">\n                Rockets\n            </Link>\n            <Link to=\"/ships\" className=\"btn btn-primary mr-3\">\n                Ships\n            </Link>\n            <Link to=\"/todos\" className=\"btn btn-primary\">\n                Todos\n            </Link>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nexport const ShipItem = ({ ship: { ship_id, ship_name, image } }) => {\n    return (\n        <div className=\"card card-body mb-3\" key={ship_id}>\n            <h4>{ship_name}</h4>\n            <img src={image} alt={ship_name} className=\"img-responsive\" />\n        </div>\n    );\n};\n\nexport default ShipItem;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { ShipItem } from './ShipItem';\n\nconst SHIPS_QUERY = gql`\n    {\n        ships {\n            ship_id\n            ship_name\n            image\n        }\n    }\n`;\n\nexport const Ships = () => {\n    return (\n        <Fragment>\n            <div className=\"card card-header mb-3\">\n                <h1>Ships</h1>\n            </div>\n            <Query query={SHIPS_QUERY}>\n                {({ loading, error, data }) => {\n                    if (loading) return <h4>Loading...</h4>;\n                    if (error) console.log(error);\n\n                    return (\n                        <Fragment>\n                            {data.ships.map(ship => (\n                                <ShipItem key={ship.ship_id} ship={ship} />\n                            ))}\n                        </Fragment>\n                    );\n                }}\n            </Query>\n        </Fragment>\n    );\n};\n\nexport default Ships;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    render() {\n        const { id, title, completed } = this.props.todo;\n        const style = {\n            backgroundColor: '#333',\n            textDecoration: completed ? 'line-through' : 'none',\n            fontSize: '1.2rem',\n            margin: 0,\n        };\n\n        return (\n            <Fragment>\n                <li className=\"list-group-item\">\n                    <label htmlFor={`todo-item${id}`} style={style}>\n                        <input\n                            type=\"checkbox\"\n                            id={`todo-item${id}`}\n                            checked={completed}\n                            onChange={this.props.toggleComplete.bind(this, id)}\n                        />{' '}\n                        {title}\n                    </label>\n                    <button className=\"btn btn-danger\" onClick={this.props.delTodo.bind(this, id)}>\n                        Remove\n                    </button>\n                </li>\n            </Fragment>\n        );\n    }\n}\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    toggleComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React, { Component } from 'react';\n\nexport class AddTodo extends Component {\n    state = {\n        title: '',\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title: '' });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit} className=\"form-inline mb-3\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"title\"\n                    placeholder=\"Add Todo ...\"\n                    value={this.state.title}\n                    onChange={this.onChange}\n                />\n                <input type=\"submit\" value=\"Add\" className=\"btn\" />\n            </form>\n        );\n    }\n}\n\nexport default AddTodo;\n","import React, { Component, Fragment } from 'react';\n// import uuid from 'uuid';\nimport axios from 'axios';\nimport { TodoItem } from './TodoItem';\nimport { AddTodo } from './AddTodo';\n\nexport class Todos extends Component {\n    state = {\n        todos: [],\n        loading: true,\n    };\n\n    componentDidMount() {\n        axios\n            .get('http://jsonplaceholder.typicode.com/todos?_limit=5')\n            .then(res => {\n                this.setState({ todos: res.data });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    toggleComplete = id => {\n        // console.log(id);\n\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                    // console.log(todo.completed);\n                }\n                return todo;\n            }),\n        });\n    };\n\n    delTodo = id => {\n        // console.log(id);\n        this.setState({ loading: true });\n        console.log('todo removing...');\n        axios\n            .delete(`http://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(() => {\n                // console.log(res.data);\n                this.setState({\n                    todos: [...this.state.todos.filter(todo => todo.id !== id)],\n                });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n                console.log('todo removed successfuly ');\n            });\n    };\n\n    addTodo = title => {\n        // console.log(title);\n        this.setState({ loading: true });\n        axios\n            .post('http://jsonplaceholder.typicode.com/todos', {\n                title,\n                completed: false,\n            })\n            .then(res =>\n                this.setState({\n                    todos: [...this.state.todos, res.data],\n                })\n            )\n            .finally(() => {\n                this.setState({ loading: false });\n                console.log('todo added successfuly');\n            });\n    };\n\n    render() {\n        // console.log(this.state.todos);\n        if (this.state.loading) {\n            return <h4>Loading...</h4>;\n        }\n        return (\n            <Fragment>\n                <div className=\"card card-header mb-3\">\n                    <h1>To do</h1>\n                </div>\n                <AddTodo addTodo={this.addTodo} />\n                <ul className=\"list-group\">\n                    {this.state.todos.map(todo => (\n                        <TodoItem\n                            key={todo.id}\n                            todo={todo}\n                            toggleComplete={this.toggleComplete}\n                            delTodo={this.delTodo}\n                        />\n                    ))}\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nexport default Todos;\n","import React from 'react';\nimport './App.scss';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport logo from './logo.svg';\nimport { Launches } from './components/Launches';\nimport { Rockets } from './components/Rockets';\nimport { Launch } from './components/Launch';\nimport { Rocket } from './components/Rocket';\nimport { Navigation } from './components/Navigation';\nimport { Ships } from './components/Ships';\nimport { Todos } from './components/Todos';\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n});\n\nconst App = () => {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <header className=\"container header\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"SpeceX\" style={{ width: '400px', margin: '20px 0' }} />\n                    </Link>\n                    <Navigation />\n                </header>\n                <div className=\"container\">\n                    <Route exact path=\"/launches\" component={Launches} />\n                    <Route exact path=\"/rockets\" component={Rockets} />\n                    <Route exact path=\"/launch/:flight_number\" component={Launch} />\n                    <Route exact path=\"/rocket/:rocket_id\" component={Rocket} />\n                    <Route exact path=\"/ships\" component={Ships} />\n                    <Route exact path=\"/todos\" component={Todos} />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}